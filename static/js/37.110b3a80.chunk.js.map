{"version":3,"file":"static/js/37.110b3a80.chunk.js","mappings":"8QAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4LCDRE,EAAMF,EAAAA,GAAAA,IAAH,qH,oBCAHG,EAAmBH,EAAAA,GAAAA,GAAH,4FAOhBI,EAAUJ,EAAAA,GAAAA,IAAH,0DCNPK,GAAYL,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mE,6BCgFtB,EArEqB,WAAO,IAAD,IACjBM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,GAQ7C,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcZ,GACXa,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcV,EAASU,MAC5BC,OAAM,SAAAC,GAAK,OAAIV,EAAWU,EAAMX,cAClC,CAACL,IAECG,GAIH,8BACGE,EAAQY,OAAS,GAChB,SAAC,IAAD,UAAaZ,KAEb,UAAC,IAAD,YACE,UAACZ,EAAD,CAAUyB,GAAIX,EAAd,WACE,SAAC,MAAD,KACA,oCAEF,UAACX,EAAD,YACE,0BACE,gBACEuB,IAAG,yCAAoChB,EAAMiB,aAC7CC,IAAKlB,EAAMmB,oBAGf,4BACE,SAAC,IAAD,UAAQnB,EAAMmB,kBACd,UAAC,IAAD,0BACeC,KAAKC,MAAOrB,EAAMsB,aAAe,GAAM,KADtD,SAGA,SAAC,IAAD,wBACA,SAAC,IAAD,UAAOtB,EAAMuB,YAEb,SAAC,IAAD,sBACA,SAAC7B,EAAD,UACGM,EAAMwB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAChB,yBACE,SAAC,IAAD,UAAOA,KADAD,eAOjB,UAAC/B,EAAD,YACE,SAAC,IAAD,sCACA,UAACD,EAAD,YACE,SAACE,EAAD,CAAWmB,GAAG,OAAOT,MAAO,CAAEC,KAAMH,GAApC,UACE,SAAC,IAAD,sBAEF,SAACR,EAAD,CAAWmB,GAAG,UAAUT,MAAO,CAAEC,KAAMH,GAAvC,UACE,SAAC,IAAD,+BAIN,SAAC,KAAD,SAhDC","sources":["components/Links/BackLink.style.js","components/Box/Box.styled.js","components/MovieDetails/MovieDetailsList.styled.js","components/Links/Link.style.js","pages/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLink = styled(Link)`\n  font-size: 18px;\n  font-weight: 500;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: black;\n  margin-bottom: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  gap: 50px;\n  padding-bottom: 30px;\n  border-bottom: 4px solid grey; ;\n`;\n","import styled from 'styled-components';\n\nexport const MovieDetailsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const BoxInfo = styled.div`\n  border-bottom: 4px solid grey;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyleLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { apiMoviesById } from 'services/api-movies';\nimport { Main } from 'components/Main/Main.styled';\nimport { BackLink } from 'components/Links/BackLink.style';\nimport { Box } from 'components/Box/Box.styled';\nimport { Title, SecondTitle } from 'components/Title/Title.styled';\nimport { Text } from 'components/Text/Text.styled';\nimport { MovieDetailsList } from 'components/MovieDetails/MovieDetailsList.styled';\nimport { StyleLink } from 'components/Links/Link.style';\nimport { BoxInfo } from 'components/MovieDetails/MovieDetailsList.styled';\nimport { ImArrowLeft2 } from 'react-icons/im';\nimport { ToastError } from 'components/ToastError/ToastError.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [message, setMessage] = useState('');\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '';\n\n  useEffect(() => {\n    apiMoviesById(movieId)\n      .then(({ data }) => setMovie(data))\n      .catch(error => setMessage(error.message));\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n  return (\n    <>\n      {message.length > 0 ? (\n        <ToastError>{message}</ToastError>\n      ) : (\n        <Main>\n          <BackLink to={backLinkHref}>\n            <ImArrowLeft2 />\n            <p>Back</p>\n          </BackLink>\n          <Box>\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/w400${movie.poster_path}`}\n                alt={movie.original_title}\n              />\n            </div>\n            <div>\n              <Title>{movie.original_title}</Title>\n              <SecondTitle>\n                User Score: {Math.trunc((movie.vote_average / 10) * 100)} %\n              </SecondTitle>\n              <SecondTitle>Overview</SecondTitle>\n              <Text>{movie.overview}</Text>\n\n              <SecondTitle>Genres</SecondTitle>\n              <MovieDetailsList>\n                {movie.genres.map(({ id, name }) => (\n                  <li key={id}>\n                    <Text>{name}</Text>\n                  </li>\n                ))}\n              </MovieDetailsList>\n            </div>\n          </Box>\n          <BoxInfo>\n            <SecondTitle>Additional information</SecondTitle>\n            <MovieDetailsList>\n              <StyleLink to=\"cast\" state={{ from: backLinkHref }}>\n                <Text>Cast</Text>\n              </StyleLink>\n              <StyleLink to=\"reviews\" state={{ from: backLinkHref }}>\n                <Text>Reviews</Text>\n              </StyleLink>\n            </MovieDetailsList>\n          </BoxInfo>\n          <Outlet />\n        </Main>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BackLink","styled","Link","Box","MovieDetailsList","BoxInfo","StyleLink","movieId","useParams","useState","movie","setMovie","message","setMessage","backLinkHref","useLocation","state","from","useEffect","apiMoviesById","then","data","catch","error","length","to","src","poster_path","alt","original_title","Math","trunc","vote_average","overview","genres","map","id","name"],"sourceRoot":""}