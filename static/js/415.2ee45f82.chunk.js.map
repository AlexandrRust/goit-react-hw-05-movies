{"version":3,"file":"static/js/415.2ee45f82.chunk.js","mappings":"iMAEaA,EAAkBC,EAAAA,GAAAA,GAAH,mF,UCCfC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,4G,6BCERG,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACsB,IAAnBF,EAAQG,QACP,SAAC,IAAD,gCAEA,SAACR,EAAD,UACGK,EAAQI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACX,yBACE,SAACV,EAAD,CACEW,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMT,GAFjB,cAKaU,IAAVL,EAAsBC,EAAOD,GAFzBD,IAJAA,Y,oECbRO,E,QAAahB,GAAAA,IAAH,kJ,mGC6BvB,UAzBa,WACX,OAA8BiB,EAAAA,EAAAA,UAAS,IAAvC,eAAOb,EAAP,KAAgBc,EAAhB,KACA,GAA8BD,EAAAA,EAAAA,UAAS,IAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACMf,GAAWC,EAAAA,EAAAA,MAMjB,OALAe,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAWM,EAAKpB,YACnCqB,OAAM,SAAAC,GAAK,OAAIN,EAAWM,EAAMP,cAClC,KAED,8BACGA,EAAQZ,OAAS,GAChB,SAAC,IAAD,UAAaY,KAEb,iCACE,4CACA,SAAC,EAAAQ,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,IAAD,CAAYf,MAAO,CAAEC,KAAMT,GAAYD,QAASA,a,yMCvB/CyB,EAAU,mCACVC,EAAe,kDACfC,EAAmB,4CACnBC,EAAgB,qCCKtB,SAAeV,IAAtB,4CAAO,OAAP,oBAAO,qFACLW,IAAAA,SAAAA,QAAA,UAA4BH,GADvB,kBAGUG,IAAAA,IAAA,GAAc,CACzBC,OAAQ,CACNC,QAASN,KALV,uLAaA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wEACLJ,IAAAA,SAAAA,QAAA,UAA4BF,GADvB,kBAGUE,IAAAA,IAAA,GAAc,CACzBC,OAAQ,CACNC,QAASN,EACTS,SAAU,QACVD,MAAOA,KAPR,uLAeA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,wEACLP,IAAAA,SAAAA,QAAA,UAA4BD,GADvB,kBAGUC,IAAAA,IAAA,UAAaO,GAAW,CACnCN,OAAQ,CACNC,QAASN,EACTS,SAAU,WANX,uLAcA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BD,GAA7B,wEACLP,IAAAA,SAAAA,QAAA,UAA4BD,GADvB,kBAGUC,IAAAA,IAAA,UAAaO,EAAb,YAAgC,CAC3CN,OAAQ,CACNC,QAASN,EACTS,SAAU,WANX,uLAcA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,wEACLP,IAAAA,SAAAA,QAAA,UAA4BD,GADvB,kBAGUC,IAAAA,IAAA,UAAaO,EAAb,YAAgC,CAC3CN,OAAQ,CACNC,QAASN,EACTS,SAAU,WANX","sources":["components/MovieList/MoviesList.styled.js","components/Links/ListLink.styled.js","components/MovieList/MovieList.jsx","components/ToastError/ToastError.styled.js","pages/Home.jsx","constans/api-options.js","services/api-movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyleMoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListLink = styled(Link)`\n  font-size: 18px;\n  font-weight: 600;\n  text-decoration: none;\n  color: black;\n`;\n","import { StyleMoviesList } from 'components/MovieList/MoviesList.styled';\nimport { ListLink } from 'components/Links/ListLink.styled';\nimport { useLocation } from 'react-router-dom';\nimport { ToastError } from 'components/ToastError/ToastError.styled';\n\nexport const MoviesList = ({ results }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {results.length === 0 ? (\n        <ToastError>Enter movie name</ToastError>\n      ) : (\n        <StyleMoviesList>\n          {results.map(({ id, title, name }) => (\n            <li key={id}>\n              <ListLink\n                to={`/movies/${id}`}\n                state={{ from: location }}\n                key={id}\n              >\n                {title === undefined ? name : title}\n              </ListLink>\n            </li>\n          ))}\n        </StyleMoviesList>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ToastError = styled.div`\n  margin-top: 20px;\n  width: 50%;\n  margin-left: 25%;\n  text-align: center;\n  font-size: 24px;\n  font-weight: 700;\n`;\n","import { apiMoviesTranding } from 'services/api-movies';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ToastError } from 'components/ToastError/ToastError.styled';\nimport { MoviesList } from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [results, setResults] = useState([]);\n  const [message, setMessage] = useState('');\n  const location = useLocation();\n  useEffect(() => {\n    apiMoviesTranding()\n      .then(({ data }) => setResults(data.results))\n      .catch(error => setMessage(error.message));\n  }, []);\n  return (\n    <>\n      {message.length > 0 ? (\n        <ToastError>{message}</ToastError>\n      ) : (\n        <>\n          <h1>Tranding today</h1>\n          <Suspense fallback={<div>Loading...</div>}>\n            <MoviesList state={{ from: location }} results={results} />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","export const API_KEY = 'f17c35877286387c8c7c530eb3e976d4';\nexport const TRENDING_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nexport const SEARCH_QUERY_URL = 'https://api.themoviedb.org/3/search/movie';\nexport const SEARCH_ID_URL = 'https://api.themoviedb.org/3/movie';\n","import axios from 'axios';\nimport {\n  API_KEY,\n  TRENDING_URL,\n  SEARCH_ID_URL,\n  SEARCH_QUERY_URL,\n} from 'constans/api-options';\n\nexport async function apiMoviesTranding() {\n  axios.defaults.baseURL = `${TRENDING_URL}`;\n  try {\n    return await axios.get(``, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesSearch(query) {\n  axios.defaults.baseURL = `${SEARCH_QUERY_URL}`;\n  try {\n    return await axios.get(``, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: query,\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesById(movieId) {\n  axios.defaults.baseURL = `${SEARCH_ID_URL}`;\n  try {\n    return await axios.get(`${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesCast(movieId) {\n  axios.defaults.baseURL = `${SEARCH_ID_URL}`;\n  try {\n    return await axios.get(`${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesReviews(movieId) {\n  axios.defaults.baseURL = `${SEARCH_ID_URL}`;\n  try {\n    return await axios.get(`${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n"],"names":["StyleMoviesList","styled","ListLink","Link","MoviesList","results","location","useLocation","length","map","id","title","name","to","state","from","undefined","ToastError","useState","setResults","message","setMessage","useEffect","apiMoviesTranding","then","data","catch","error","Suspense","fallback","API_KEY","TRENDING_URL","SEARCH_QUERY_URL","SEARCH_ID_URL","axios","params","api_key","apiMoviesSearch","query","language","apiMoviesById","movieId","apiMoviesCast","apiMoviesReviews"],"sourceRoot":""}