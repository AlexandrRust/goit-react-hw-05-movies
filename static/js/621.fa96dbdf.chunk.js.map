{"version":3,"file":"static/js/621.fa96dbdf.chunk.js","mappings":"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","sources":["components/MovieList/MoviesList.styled.js","components/Links/ListLink.styled.js","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","constants/api-options.js","services/api-movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyleMoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListLink = styled(Link)`\n  font-size: 18px;\n  font-weight: 600;\n  text-decoration: none;\n  color: black;\n`;\n","import { StyleMoviesList } from 'components/MovieList/MoviesList.styled';\nimport { ListLink } from 'components/Links/ListLink.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ results }) => {\n  const location = useLocation();\n\n  return (\n    <StyleMoviesList>\n      {results.map(({ id, title, name }) => (\n        <li key={id}>\n          <ListLink to={`/movies/${id}`} state={{ from: location }} key={id}>\n            {title === undefined ? name : title}\n          </ListLink>\n        </li>\n      ))}\n    </StyleMoviesList>\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  font-size: 18px;\n  font-weight: 600;\n  border-radius: 5px;\n  margin-right: 10px;\n  &[type='text'] {\n    padding-inline-start: 5px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 18px;\n  border-radius: 5px;\n`;\n","import { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { Input, Button } from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const schema = yup.object().shape({\n    query: yup.string().min(3).required(),\n  });\n  const handleSubmit = values => {\n    onSubmit(values);\n  };\n\n  return (\n    <Formik\n      initialValues={{ query: '' }}\n      schema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Input name=\"query\" type=\"text\" autoComplete=\"off\" autoFocus />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { apiMoviesSearch } from 'services/api-movies';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { MoviesList } from 'components/MovieList/MovieList';\nimport { ToastContainer } from 'react-toastify';\n\nconst Movies = () => {\n  const [results, setResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const getQuery = ({ query }) => {\n    setSearchParams({ query: query });\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    } else {\n      apiMoviesSearch(searchQuery).then(({ data }) => setResults(data.results));\n    }\n  }, [searchQuery]);\n\n  return (\n    <>\n      <SearchBar onSubmit={getQuery} value={searchQuery} />\n      <MoviesList results={results} state={{ from: location }} />\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Movies;\n","export const API_KEY = 'f17c35877286387c8c7c530eb3e976d4';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/api-options';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// trending / movie / day;\n\nconst notify = message => {\n  return toast.error(`${message}`, {\n    position: 'top-right',\n    autoClose: 4000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nexport async function apiMoviesTranding() {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesSearch(query) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: query,\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesById(movieId) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesCast(movieId) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesReviews(movieId) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n"],"names":["StyleMoviesList","styled","ListLink","Link","MoviesList","results","location","useLocation","map","id","title","name","to","state","from","undefined","Input","Field","Button","SearchBar","onSubmit","schema","yup","shape","query","min","required","initialValues","values","type","autoComplete","autoFocus","useState","setResults","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","apiMoviesSearch","then","data","value","API_KEY","BASE_URL","notify","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","apiMoviesTranding","axios","params","api_key","language","apiMoviesById","movieId","apiMoviesCast","apiMoviesReviews"],"sourceRoot":""}