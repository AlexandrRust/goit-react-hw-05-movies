{"version":3,"file":"static/js/269.b184f8c8.chunk.js","mappings":"sLAEaA,E,QAAOC,GAAAA,EAAH,kE,uGCAJC,EAAQD,EAAAA,GAAAA,GAAH,+EAMLE,EAAcF,EAAAA,GAAAA,GAAH,0F,6GCsBxB,UAvBgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAWI,EAAKC,cAC5D,CAACT,KAGF,4BACE,wBACGG,EAAQO,KAAI,SAAAC,GAAM,OACjB,2BACE,SAAC,IAAD,UAAcA,EAAOC,UACrB,SAAC,IAAD,UAAOD,EAAOE,YAFPF,EAAOG,UAMpB,SAAC,KAAD,S,wMCzBOC,EAAU,mCACVC,EAAW,+B,UCMlBC,G,QAAS,SAAAC,GACb,OAAOC,EAAAA,GAAAA,MAAA,UAAeD,GAAW,CAC/BE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,MAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qFACLC,IAAAA,SAAAA,QAAA,UAA4Bb,GADvB,kBAGUa,IAAAA,IAAA,qBAAgC,CAC3CC,OAAQ,CACNC,QAAShB,KALV,iGASIE,EAAO,KAAMC,UATjB,gFAaA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wEACLJ,IAAAA,SAAAA,QAAA,UAA4Bb,GADvB,kBAGUa,IAAAA,IAAA,eAA0B,CACrCC,OAAQ,CACNC,QAAShB,EACTmB,SAAU,QACVD,MAAOA,KAPR,iGAWIhB,EAAO,KAAMC,UAXjB,gFAeA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BnC,GAA7B,wEACL6B,IAAAA,SAAAA,QAAA,UAA4Bb,GADvB,kBAGUa,IAAAA,IAAA,gBAAmB7B,GAAW,CACzC8B,OAAQ,CACNC,QAAShB,EACTmB,SAAU,WANX,iGAUIjB,EAAO,KAAMC,UAVjB,gFAcA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BpC,GAA7B,wEACL6B,IAAAA,SAAAA,QAAA,UAA4Bb,GADvB,kBAGUa,IAAAA,IAAA,gBAAmB7B,EAAnB,YAAsC,CACjD8B,OAAQ,CACNC,QAAShB,EACTmB,SAAU,WANX,iGAUIjB,EAAO,KAAMC,UAVjB,gFAcA,SAAeZ,EAAtB,+CAAO,OAAP,oBAAO,WAAgCN,GAAhC,wEACL6B,IAAAA,SAAAA,QAAA,UAA4Bb,GADvB,kBAGUa,IAAAA,IAAA,gBAAmB7B,EAAnB,YAAsC,CACjD8B,OAAQ,CACNC,QAAShB,EACTmB,SAAU,WANX,iGAUIjB,EAAO,KAAMC,UAVjB","sources":["components/Text/Text.styled.js","components/Title/Title.styled.js","pages/MovieDetails/Reviews/Reviews.jsx","constants/api-options.js","services/api-movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 56px;\n  font-weight: 800;\n  margin: 0;\n`;\n\nexport const SecondTitle = styled.h3`\n  font-size: 32px;\n  font-weight: 600;\n  margin-bottom: 30px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiMoviesReviews } from 'services/api-movies';\nimport { SecondTitle } from 'components/Title/Title.styled';\nimport { Text } from 'components/Text/Text.styled';\nimport { ToastContainer } from 'react-toastify';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    apiMoviesReviews(movieId).then(({ data }) => setReviews(data.results));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <SecondTitle>{review.author}</SecondTitle>\n            <Text>{review.content}</Text>\n          </li>\n        ))}\n      </ul>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Reviews;\n","export const API_KEY = 'f17c35877286387c8c7c530eb3e976d4';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/api-options';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// trending / movie / day;\n\nconst notify = message => {\n  return toast.error(`${message}`, {\n    position: 'top-right',\n    autoClose: 4000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nexport async function apiMoviesTranding() {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesSearch(query) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: query,\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesById(movieId) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesCast(movieId) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesReviews(movieId) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n"],"names":["Text","styled","Title","SecondTitle","movieId","useParams","useState","reviews","setReviews","useEffect","apiMoviesReviews","then","data","results","map","review","author","content","id","API_KEY","BASE_URL","notify","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","apiMoviesTranding","axios","params","api_key","apiMoviesSearch","query","language","apiMoviesById","apiMoviesCast"],"sourceRoot":""}