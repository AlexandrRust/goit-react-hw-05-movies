{"version":3,"file":"static/js/736.9c7882c1.chunk.js","mappings":"sLAEaA,E,QAAOC,GAAAA,EAAH,kE,uGCAJC,EAAQD,EAAAA,GAAAA,GAAH,+EAMLE,EAAcF,EAAAA,GAAAA,GAAH,0F,oGCoBxB,UAtBgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAWI,EAAKC,cAC5D,CAACT,KAGF,0BACE,wBACGG,EAAQO,KAAI,SAAAC,GAAM,OACjB,2BACE,SAAC,IAAD,UAAcA,EAAOC,UACrB,SAAC,IAAD,UAAOD,EAAOE,YAFPF,EAAOG,a,yMClBbC,EAAU,mCACVC,EAAe,kDACfC,EAAmB,4CACnBC,EAAgB,qCCKtB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qFACLC,IAAAA,SAAAA,QAAA,UAA4BJ,GADvB,kBAGUI,IAAAA,IAAA,GAAc,CACzBC,OAAQ,CACNC,QAASP,KALV,uLAaA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wEACLJ,IAAAA,SAAAA,QAAA,UAA4BH,GADvB,kBAGUG,IAAAA,IAAA,GAAc,CACzBC,OAAQ,CACNC,QAASP,EACTU,SAAU,QACVD,MAAOA,KAPR,uLAeA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA6B1B,GAA7B,wEACLoB,IAAAA,SAAAA,QAAA,UAA4BF,GADvB,kBAGUE,IAAAA,IAAA,UAAapB,GAAW,CACnCqB,OAAQ,CACNC,QAASP,EACTU,SAAU,WANX,uLAcA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA6B3B,GAA7B,wEACLoB,IAAAA,SAAAA,QAAA,UAA4BF,GADvB,kBAGUE,IAAAA,IAAA,UAAapB,EAAb,YAAgC,CAC3CqB,OAAQ,CACNC,QAASP,EACTU,SAAU,WANX,uLAcA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCN,GAAhC,wEACLoB,IAAAA,SAAAA,QAAA,UAA4BF,GADvB,kBAGUE,IAAAA,IAAA,UAAapB,EAAb,YAAgC,CAC3CqB,OAAQ,CACNC,QAASP,EACTU,SAAU,WANX","sources":["components/Text/Text.styled.js","components/Title/Title.styled.js","pages/Reviews.jsx","constans/api-options.js","services/api-movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 56px;\n  font-weight: 800;\n  margin: 0;\n`;\n\nexport const SecondTitle = styled.h3`\n  font-size: 32px;\n  font-weight: 600;\n  margin-bottom: 30px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiMoviesReviews } from 'services/api-movies';\nimport { SecondTitle } from 'components/Title/Title.styled';\nimport { Text } from 'components/Text/Text.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    apiMoviesReviews(movieId).then(({ data }) => setReviews(data.results));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <SecondTitle>{review.author}</SecondTitle>\n            <Text>{review.content}</Text>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","export const API_KEY = 'f17c35877286387c8c7c530eb3e976d4';\nexport const TRENDING_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nexport const SEARCH_QUERY_URL = 'https://api.themoviedb.org/3/search/movie';\nexport const SEARCH_ID_URL = 'https://api.themoviedb.org/3/movie';\n","import axios from 'axios';\nimport {\n  API_KEY,\n  TRENDING_URL,\n  SEARCH_ID_URL,\n  SEARCH_QUERY_URL,\n} from 'constans/api-options';\n\nexport async function apiMoviesTranding() {\n  axios.defaults.baseURL = `${TRENDING_URL}`;\n  try {\n    return await axios.get(``, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesSearch(query) {\n  axios.defaults.baseURL = `${SEARCH_QUERY_URL}`;\n  try {\n    return await axios.get(``, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: query,\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesById(movieId) {\n  axios.defaults.baseURL = `${SEARCH_ID_URL}`;\n  try {\n    return await axios.get(`${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesCast(movieId) {\n  axios.defaults.baseURL = `${SEARCH_ID_URL}`;\n  try {\n    return await axios.get(`${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesReviews(movieId) {\n  axios.defaults.baseURL = `${SEARCH_ID_URL}`;\n  try {\n    return await axios.get(`${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n"],"names":["Text","styled","Title","SecondTitle","movieId","useParams","useState","reviews","setReviews","useEffect","apiMoviesReviews","then","data","results","map","review","author","content","id","API_KEY","TRENDING_URL","SEARCH_QUERY_URL","SEARCH_ID_URL","apiMoviesTranding","axios","params","api_key","apiMoviesSearch","query","language","apiMoviesById","apiMoviesCast"],"sourceRoot":""}