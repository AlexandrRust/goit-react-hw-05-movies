{"version":3,"file":"static/js/442.41944dbc.chunk.js","mappings":"sLAEaA,E,QAAOC,GAAAA,EAAH,kE,uGCAJC,EAAQD,EAAAA,GAAAA,GAAH,+EAMLE,EAAcF,EAAAA,GAAAA,GAAH,0F,oGC4BxB,UA9BiB,WACf,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcN,GAASO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAASI,EAAKC,WACvD,CAACT,KAGF,0BACE,wBACGG,EAAMO,KACL,SAAAD,GAAI,OACoB,OAAtBA,EAAKE,mBACiBC,IAAtBH,EAAKE,eACH,2BACE,gBACEE,IAAG,yCAAoCJ,EAAKE,cAC5CG,IAAI,MAEN,SAAC,IAAD,UAAcL,EAAKM,iBACnB,UAAC,IAAD,yBAAkBN,EAAKO,eANhBP,EAAKQ,a,yMCrBfC,EAAU,mCACVC,EAAe,kDACfC,EAAmB,4CACnBC,EAAgB,qCCKtB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qFACLC,IAAAA,SAAAA,QAAA,UAA4BJ,GADvB,kBAGUI,IAAAA,IAAA,GAAc,CACzBC,OAAQ,CACNC,QAASP,KALV,uLAaA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wEACLJ,IAAAA,SAAAA,QAAA,UAA4BH,GADvB,kBAGUG,IAAAA,IAAA,GAAc,CACzBC,OAAQ,CACNC,QAASP,EACTU,SAAU,QACVD,MAAOA,KAPR,uLAeA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA6B7B,GAA7B,wEACLuB,IAAAA,SAAAA,QAAA,UAA4BF,GADvB,kBAGUE,IAAAA,IAAA,UAAavB,GAAW,CACnCwB,OAAQ,CACNC,QAASP,EACTU,SAAU,WANX,uLAcA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BN,GAA7B,wEACLuB,IAAAA,SAAAA,QAAA,UAA4BF,GADvB,kBAGUE,IAAAA,IAAA,UAAavB,EAAb,YAAgC,CAC3CwB,OAAQ,CACNC,QAASP,EACTU,SAAU,WANX,uLAcA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAgC9B,GAAhC,wEACLuB,IAAAA,SAAAA,QAAA,UAA4BF,GADvB,kBAGUE,IAAAA,IAAA,UAAavB,EAAb,YAAgC,CAC3CwB,OAAQ,CACNC,QAASP,EACTU,SAAU,WANX","sources":["components/Text/Text.styled.js","components/Title/Title.styled.js","pages/CastList.jsx","constans/api-options.js","services/api-movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 56px;\n  font-weight: 800;\n  margin: 0;\n`;\n\nexport const SecondTitle = styled.h3`\n  font-size: 32px;\n  font-weight: 600;\n  margin-bottom: 30px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiMoviesCast } from 'services/api-movies';\nimport { Text } from 'components/Text/Text.styled';\nimport { SecondTitle } from 'components/Title/Title.styled';\n\nconst CastList = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState([]);\n\n  useEffect(() => {\n    apiMoviesCast(movieId).then(({ data }) => setCasts(data.cast));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {casts.map(\n          cast =>\n            cast.profile_path !== null &&\n            cast.profile_path !== undefined && (\n              <li key={cast.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${cast.profile_path}`}\n                  alt=\"\"\n                />\n                <SecondTitle>{cast.original_name}</SecondTitle>\n                <Text>Character: {cast.character}</Text>\n              </li>\n            )\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default CastList;\n","export const API_KEY = 'f17c35877286387c8c7c530eb3e976d4';\nexport const TRENDING_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nexport const SEARCH_QUERY_URL = 'https://api.themoviedb.org/3/search/movie';\nexport const SEARCH_ID_URL = 'https://api.themoviedb.org/3/movie';\n","import axios from 'axios';\nimport {\n  API_KEY,\n  TRENDING_URL,\n  SEARCH_ID_URL,\n  SEARCH_QUERY_URL,\n} from 'constans/api-options';\n\nexport async function apiMoviesTranding() {\n  axios.defaults.baseURL = `${TRENDING_URL}`;\n  try {\n    return await axios.get(``, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesSearch(query) {\n  axios.defaults.baseURL = `${SEARCH_QUERY_URL}`;\n  try {\n    return await axios.get(``, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: query,\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesById(movieId) {\n  axios.defaults.baseURL = `${SEARCH_ID_URL}`;\n  try {\n    return await axios.get(`${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesCast(movieId) {\n  axios.defaults.baseURL = `${SEARCH_ID_URL}`;\n  try {\n    return await axios.get(`${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesReviews(movieId) {\n  axios.defaults.baseURL = `${SEARCH_ID_URL}`;\n  try {\n    return await axios.get(`${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n"],"names":["Text","styled","Title","SecondTitle","movieId","useParams","useState","casts","setCasts","useEffect","apiMoviesCast","then","data","cast","map","profile_path","undefined","src","alt","original_name","character","id","API_KEY","TRENDING_URL","SEARCH_QUERY_URL","SEARCH_ID_URL","apiMoviesTranding","axios","params","api_key","apiMoviesSearch","query","language","apiMoviesById","apiMoviesReviews"],"sourceRoot":""}