{"version":3,"file":"static/js/415.fa869f02.chunk.js","mappings":"iMAEaA,EAAkBC,EAAAA,GAAAA,GAAH,mF,UCCfC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,4G,mBCCRG,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAQG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACX,yBACE,SAACT,EAAD,CAAUU,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA9C,cACaS,IAAVL,EAAsBC,EAAOD,GAD+BD,IADxDA,U,kGCajB,UAjBa,WACX,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOX,EAAP,KAAgBY,EAAhB,KACMX,GAAWC,EAAAA,EAAAA,MAIjB,OAHAW,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAWI,EAAKhB,cACtD,KAED,iCACE,4CACA,SAAC,EAAAiB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,IAAD,CAAYV,MAAO,CAAEC,KAAMR,GAAYD,QAASA,OAElD,SAAC,KAAD,S,wMClBOmB,EAAU,mCACVC,EAAW,+B,UCMlBC,G,QAAS,SAAAC,GACb,OAAOC,EAAAA,GAAAA,MAAA,UAAeD,GAAW,CAC/BE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUpB,MAIP,SAAeI,IAAtB,4CAAO,OAAP,oBAAO,qFACLiB,IAAAA,SAAAA,QAAA,UAA4BX,GADvB,kBAGUW,IAAAA,IAAA,qBAAgC,CAC3CC,OAAQ,CACNC,QAASd,KALV,iGASIE,EAAO,KAAMC,UATjB,gFAaA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wEACLJ,IAAAA,SAAAA,QAAA,UAA4BX,GADvB,kBAGUW,IAAAA,IAAA,eAA0B,CACrCC,OAAQ,CACNC,QAASd,EACTiB,SAAU,QACVD,MAAOA,KAPR,iGAWId,EAAO,KAAMC,UAXjB,gFAeA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,wEACLP,IAAAA,SAAAA,QAAA,UAA4BX,GADvB,kBAGUW,IAAAA,IAAA,gBAAmBO,GAAW,CACzCN,OAAQ,CACNC,QAASd,EACTiB,SAAU,WANX,iGAUIf,EAAO,KAAMC,UAVjB,gFAcA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BD,GAA7B,wEACLP,IAAAA,SAAAA,QAAA,UAA4BX,GADvB,kBAGUW,IAAAA,IAAA,gBAAmBO,EAAnB,YAAsC,CACjDN,OAAQ,CACNC,QAASd,EACTiB,SAAU,WANX,iGAUIf,EAAO,KAAMC,UAVjB,gFAcA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,wEACLP,IAAAA,SAAAA,QAAA,UAA4BX,GADvB,kBAGUW,IAAAA,IAAA,gBAAmBO,EAAnB,YAAsC,CACjDN,OAAQ,CACNC,QAASd,EACTiB,SAAU,WANX,iGAUIf,EAAO,KAAMC,UAVjB","sources":["components/MovieList/MoviesList.styled.js","components/Links/ListLink.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx","constants/api-options.js","services/api-movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyleMoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListLink = styled(Link)`\n  font-size: 18px;\n  font-weight: 600;\n  text-decoration: none;\n  color: black;\n`;\n","import { StyleMoviesList } from 'components/MovieList/MoviesList.styled';\nimport { ListLink } from 'components/Links/ListLink.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ results }) => {\n  const location = useLocation();\n\n  return (\n    <StyleMoviesList>\n      {results.map(({ id, title, name }) => (\n        <li key={id}>\n          <ListLink to={`/movies/${id}`} state={{ from: location }} key={id}>\n            {title === undefined ? name : title}\n          </ListLink>\n        </li>\n      ))}\n    </StyleMoviesList>\n  );\n};\n","import { apiMoviesTranding } from 'services/api-movies';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { MoviesList } from 'components/MovieList/MovieList';\nimport { ToastContainer } from 'react-toastify';\n\nconst Home = () => {\n  const [results, setResults] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    apiMoviesTranding().then(({ data }) => setResults(data.results));\n  }, []);\n  return (\n    <>\n      <h1>Tranding today</h1>\n      <Suspense fallback={<div>Loading...</div>}>\n        <MoviesList state={{ from: location }} results={results} />\n      </Suspense>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Home;\n","export const API_KEY = 'f17c35877286387c8c7c530eb3e976d4';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/api-options';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// trending / movie / day;\n\nconst notify = message => {\n  return toast.error(`${message}`, {\n    position: 'top-right',\n    autoClose: 4000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nexport async function apiMoviesTranding() {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesSearch(query) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: query,\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesById(movieId) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesCast(movieId) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesReviews(movieId) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n"],"names":["StyleMoviesList","styled","ListLink","Link","MoviesList","results","location","useLocation","map","id","title","name","to","state","from","undefined","useState","setResults","useEffect","apiMoviesTranding","then","data","Suspense","fallback","API_KEY","BASE_URL","notify","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","axios","params","api_key","apiMoviesSearch","query","language","apiMoviesById","movieId","apiMoviesCast","apiMoviesReviews"],"sourceRoot":""}