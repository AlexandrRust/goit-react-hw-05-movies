{"version":3,"file":"static/js/958.0588bae0.chunk.js","mappings":"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","sources":["components/Text/Text.styled.js","components/Title/Title.styled.js","components/Links/BackLink.styled.js","components/Box/Box.styled.js","components/MovieDetails/ListWraper.styled.js","components/Links/Link.styled.js","components/MovieDetails/BoxInfo.syled.js","pages/MovieDetails/MovieDetails.jsx","constants/api-options.js","services/api-movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 56px;\n  font-weight: 800;\n  margin: 0;\n`;\n\nexport const SecondTitle = styled.h3`\n  font-size: 32px;\n  font-weight: 600;\n  margin-bottom: 30px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLink = styled(Link)`\n  font-size: 18px;\n  font-weight: 500;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  width: fit-content;\n  color: black;\n  margin-bottom: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  gap: 50px;\n  padding-bottom: 30px;\n  border-bottom: 4px solid grey; ;\n`;\n","import styled from 'styled-components';\n\nexport const ListWraper = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  gap: 10px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyleLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n","import styled from 'styled-components';\n\nexport const BoxInfo = styled.div`\n  border-bottom: 4px solid grey;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { apiMoviesById } from 'services/api-movies';\nimport { BackLink } from 'components/Links/BackLink.styled';\nimport { Box } from 'components/Box/Box.styled';\nimport { Title, SecondTitle } from 'components/Title/Title.styled';\nimport { Text } from 'components/Text/Text.styled';\nimport { ListWraper } from 'components/MovieDetails/ListWraper.styled';\nimport { StyleLink } from 'components/Links/Link.styled';\nimport { BoxInfo } from 'components/MovieDetails/BoxInfo.syled';\nimport { ImArrowLeft2 } from 'react-icons/im';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '';\n\n  useEffect(() => {\n    apiMoviesById(movieId).then(({ data }) => setMovie(data));\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n  return (\n    <>\n      <BackLink to={backLinkHref}>\n        <ImArrowLeft2 />\n        <p>Back</p>\n      </BackLink>\n      <Box>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w400${movie.poster_path}`}\n            alt={movie.original_title}\n          />\n        </div>\n        <div>\n          <Title>{movie.original_title}</Title>\n          <SecondTitle>\n            User Score: {Math.trunc((movie.vote_average / 10) * 100)} %\n          </SecondTitle>\n          <SecondTitle>Overview</SecondTitle>\n          <Text>{movie.overview}</Text>\n\n          <SecondTitle>Genres</SecondTitle>\n          <ListWraper>\n            {movie.genres.map(({ id, name }) => (\n              <li key={id}>\n                <Text>{name}</Text>\n              </li>\n            ))}\n          </ListWraper>\n        </div>\n      </Box>\n\n      <BoxInfo>\n        <SecondTitle>Additional information</SecondTitle>\n        <ListWraper>\n          <StyleLink to=\"cast\" state={{ from: backLinkHref }}>\n            <Text>Cast</Text>\n          </StyleLink>\n          <StyleLink to=\"reviews\" state={{ from: backLinkHref }}>\n            <Text>Reviews</Text>\n          </StyleLink>\n        </ListWraper>\n      </BoxInfo>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","export const API_KEY = 'f17c35877286387c8c7c530eb3e976d4';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/api-options';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// trending / movie / day;\n\nconst notify = message => {\n  return toast.error(`${message}`, {\n    position: 'top-right',\n    autoClose: 4000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nexport async function apiMoviesTranding() {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesSearch(query) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: query,\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesById(movieId) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesCast(movieId) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n\nexport async function apiMoviesReviews(movieId) {\n  axios.defaults.baseURL = `${BASE_URL}`;\n  try {\n    return await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return notify(error.message);\n  }\n}\n"],"names":["Text","styled","Title","SecondTitle","BackLink","Link","Box","ListWraper","StyleLink","BoxInfo","movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","apiMoviesById","then","data","to","src","poster_path","alt","original_title","Math","trunc","vote_average","overview","genres","map","id","name","API_KEY","BASE_URL","notify","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","apiMoviesTranding","axios","params","api_key","apiMoviesSearch","query","language","apiMoviesCast","apiMoviesReviews"],"sourceRoot":""}