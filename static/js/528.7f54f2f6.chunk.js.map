{"version":3,"file":"static/js/528.7f54f2f6.chunk.js","mappings":"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","sources":["components/MovieList/MoviesList.styled.js","components/Links/ListLink.styled.js","components/MovieList/MovieList.jsx","components/ToastError/ToastError.styled.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","constans/api-options.js","services/api-movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyleMoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListLink = styled(Link)`\n  font-size: 18px;\n  font-weight: 600;\n  text-decoration: none;\n  color: black;\n`;\n","import { StyleMoviesList } from 'components/MovieList/MoviesList.styled';\nimport { ListLink } from 'components/Links/ListLink.styled';\nimport { useLocation } from 'react-router-dom';\nimport { ToastError } from 'components/ToastError/ToastError.styled';\n\nexport const MoviesList = ({ results }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {results.length === 0 ? (\n        <ToastError>Enter movie name</ToastError>\n      ) : (\n        <StyleMoviesList>\n          {results.map(({ id, title, name }) => (\n            <li key={id}>\n              <ListLink\n                to={`/movies/${id}`}\n                state={{ from: location }}\n                key={id}\n              >\n                {title === undefined ? name : title}\n              </ListLink>\n            </li>\n          ))}\n        </StyleMoviesList>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ToastError = styled.div`\n  margin-top: 20px;\n  width: 50%;\n  margin-left: 25%;\n  text-align: center;\n  font-size: 24px;\n  font-weight: 700;\n`;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  font-size: 18px;\n  font-weight: 600;\n  border-radius: 5px;\n  margin-right: 10px;\n  &[type='text'] {\n    padding-inline-start: 5px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 18px;\n  border-radius: 5px;\n`;\n","import { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { Input, Button } from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const schema = yup.object().shape({\n    query: yup.string().min(3).required(),\n  });\n  const handleSubmit = values => {\n    onSubmit(values);\n  };\n\n  return (\n    <Formik\n      initialValues={{ query: '' }}\n      schema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Input name=\"query\" type=\"text\" autoComplete=\"off\" autoFocus />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { apiMoviesSearch } from 'services/api-movies';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { MoviesList } from 'components/MovieList/MovieList';\nimport { ToastError } from 'components/ToastError/ToastError.styled';\n\nconst Movies = () => {\n  const [results, setResults] = useState([]);\n  const [message, setMessage] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const getQuery = ({ query }) => {\n    setSearchParams({ query: query });\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    } else {\n      apiMoviesSearch(searchQuery)\n        .then(({ data }) => setResults(data.results))\n        .catch(error => setMessage(error.message));\n    }\n  }, [searchQuery]);\n\n  return (\n    <>\n      <SearchBar onSubmit={getQuery} value={searchQuery} />\n      {message.length > 0 ? (\n        <ToastError>{message}</ToastError>\n      ) : (\n        <MoviesList results={results} state={{ from: location }} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","export const API_KEY = 'f17c35877286387c8c7c530eb3e976d4';\nexport const TRENDING_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nexport const SEARCH_QUERY_URL = 'https://api.themoviedb.org/3/search/movie';\nexport const SEARCH_ID_URL = 'https://api.themoviedb.org/3/movie';\n","import axios from 'axios';\nimport {\n  API_KEY,\n  TRENDING_URL,\n  SEARCH_ID_URL,\n  SEARCH_QUERY_URL,\n} from 'constans/api-options';\n\nexport async function apiMoviesTranding() {\n  axios.defaults.baseURL = `${TRENDING_URL}`;\n  try {\n    return await axios.get(``, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesSearch(query) {\n  axios.defaults.baseURL = `${SEARCH_QUERY_URL}`;\n  try {\n    return await axios.get(``, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: query,\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesById(movieId) {\n  axios.defaults.baseURL = `${SEARCH_ID_URL}`;\n  try {\n    return await axios.get(`${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesCast(movieId) {\n  axios.defaults.baseURL = `${SEARCH_ID_URL}`;\n  try {\n    return await axios.get(`${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function apiMoviesReviews(movieId) {\n  axios.defaults.baseURL = `${SEARCH_ID_URL}`;\n  try {\n    return await axios.get(`${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n  } catch (error) {\n    return error;\n  }\n}\n"],"names":["StyleMoviesList","styled","ListLink","Link","MoviesList","results","location","useLocation","length","map","id","title","name","to","state","from","undefined","ToastError","Input","Field","Button","SearchBar","onSubmit","schema","yup","shape","query","min","required","initialValues","values","type","autoComplete","autoFocus","useState","setResults","message","setMessage","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","apiMoviesSearch","then","data","catch","error","value","API_KEY","TRENDING_URL","SEARCH_QUERY_URL","SEARCH_ID_URL","apiMoviesTranding","axios","params","api_key","language","apiMoviesById","movieId","apiMoviesCast","apiMoviesReviews"],"sourceRoot":""}